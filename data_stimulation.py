# -*- coding: utf-8 -*-
"""Data_Stimulation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ilIGzyS8tKN42d4AD2ZoNT35CivCCIqm
"""

!pip install faker

import pandas as pd
import numpy as np
from faker import Faker
import random

fake = Faker()

# Set seed for reproducibility
np.random.seed(42)
random.seed(42)

# Sample options
categories = ['Fitness', 'Wellness', 'Lifestyle', 'Nutrition', 'Parenting']
platforms = ['Instagram', 'YouTube', 'Twitter']
genders = ['Male', 'Female', 'Other']

# Generate 100 influencer profiles
influencers = []
for i in range(1, 101):
    influencers.append({
        "ID": i,
        "name": f"@{fake.first_name().lower()}{random.randint(10,99)}",
        "category": random.choice(categories),
        "gender": random.choice(genders),
        "follower_count": random.randint(10000, 1000000),
        "platform": random.choice(platforms)
    })

df_influencers = pd.DataFrame(influencers)
df_influencers.head()

# Save as CSV
df_influencers.to_csv('influencers_data.csv', index=False)

from google.colab import files
files.download('influencers_data.csv')

from faker import Faker
import pandas as pd
import random
from datetime import datetime, timedelta

fake = Faker()

# Assume df_influencers already exists
posts = []

for idx, row in df_influencers.iterrows():
    num_posts = random.randint(2, 5)
    for _ in range(num_posts):
        date = fake.date_between(start_date='-6M', end_date='today')
        platform = row['platform']
        reach = int(row['follower_count'] * random.uniform(0.1, 1.2))
        likes = int(reach * random.uniform(0.05, 0.25))
        comments = int(likes * random.uniform(0.03, 0.2))
        post = {
            'influencer_id': row['ID'],
            'platform': platform,
            'date': date,
            'URL': f"https://{platform.lower()}.com/post/{fake.uuid4()}",
            'caption': fake.sentence(nb_words=8),
            'reach': reach,
            'likes': likes,
            'comments': comments
        }
        posts.append(post)

df_posts = pd.DataFrame(posts)
df_posts.head()

df_posts.to_csv('posts_data.csv', index=False)

from google.colab import files
files.download('posts_data.csv')

import numpy as np

campaigns = ['Summer Fit', 'Wellness Week', 'Winter Bulk', 'Festival Boost']
products = ['Protein Powder', 'Multivitamins', 'Energy Bar', 'Creatine', 'Omega 3']

tracking_rows = []

for idx, row in df_influencers.iterrows():
    num_users = random.randint(5, 20)
    for _ in range(num_users):
        orders = random.randint(1, 3)
        revenue = orders * random.randint(500, 5000)
        tracking_rows.append({
            'source': row['platform'],
            'campaign': random.choice(campaigns),
            'influencer_id': row['ID'],
            'user_id': fake.uuid4(),
            'product': random.choice(products),
            'date': fake.date_between(start_date='-6M', end_date='today'),
            'orders': orders,
            'revenue': revenue
        })

df_tracking = pd.DataFrame(tracking_rows)
df_tracking.head()

df_tracking.to_csv('tracking_data.csv', index=False)

from google.colab import files
files.download('tracking_data.csv')

# Prepare payout list
payout_rows = []

# Group orders per influencer
orders_per_influencer = df_tracking.groupby('influencer_id')['orders'].sum().to_dict()

for idx, row in df_influencers.iterrows():
    influencer_id = row['ID']
    basis = random.choice(['post', 'order'])

    if basis == 'post':
        num_posts = len(df_posts[df_posts['influencer_id'] == influencer_id])
        rate = random.randint(1000, 10000)
        total_payout = num_posts * rate
        payout_rows.append({
            'influencer_id': influencer_id,
            'basis': 'post',
            'rate': rate,
            'orders': None,
            'total_payout': total_payout
        })

    else:  # per order
        order_count = orders_per_influencer.get(influencer_id, 0)
        rate = random.randint(100, 500)
        total_payout = order_count * rate
        payout_rows.append({
            'influencer_id': influencer_id,
            'basis': 'order',
            'rate': rate,
            'orders': order_count,
            'total_payout': total_payout
        })

df_payouts = pd.DataFrame(payout_rows)
df_payouts.head()

df_payouts.to_csv('payouts_data.csv', index=False)

from google.colab import files
files.download('payouts_data.csv')